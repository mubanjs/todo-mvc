import{r as p,o as i,c as r,a as n,b as s,w as t,F as u,d as e,e as l}from"./app.387eb9c4.js";import{_ as d}from"./plugin-vue_export-helper.21dcd24c.js";const k={},m=n("h1",{id:"_2-templates-and-styles",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2-templates-and-styles","aria-hidden":"true"},"#"),e(" 2. Templates and Styles")],-1),b=n("p",null,"To save some time (and for consistency) we're going to copy all the html and css from the Todo MVC template repo.",-1),h=e("The CSS can be found "),g={href:"https://github.com/mubanjs/todo-mvc/blob/main/projects/todo-app-client/src/style.css",target:"_blank",rel:"noopener noreferrer"},f=e("here"),w=e(", and it can be copied over into your "),y=n("code",null,"src/style.css",-1),v=e(" file."),T=l('<p>The HTML can be cut into 4 different templates:</p><ol><li>An individual <code>TodoItem</code>.</li><li>The <code>AppHeader</code> section, with an input for new todos.</li><li>The <code>AppFooter</code> sections, which shows some information, and allows you to filter todos by state.</li><li>The <code>App</code> component itself, which is responsible for rendering the <code>TodoItem</code> components, and connect with the <code>AppHeader</code> and <code>AppFooter</code> components.</li></ol><h2 id="todoitem" tabindex="-1"><a class="header-anchor" href="#todoitem" aria-hidden="true">#</a> <code>TodoItem</code></h2><p>Create a <code>src/components/todo-item/TodoItem.template.ts</code> with the following content;</p>',4),_=n("div",{class:"language-typescript ext-ts line-numbers-mode"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"import"),e(),n("span",{class:"token keyword"},"type"),e(),n("span",{class:"token punctuation"},"{"),e(" ComponentTemplateResult "),n("span",{class:"token punctuation"},"}"),e(),n("span",{class:"token keyword"},"from"),e(),n("span",{class:"token string"},"'@muban/template'"),n("span",{class:"token punctuation"},";"),e(`
`),n("span",{class:"token keyword"},"import"),e(),n("span",{class:"token punctuation"},"{"),e(" html "),n("span",{class:"token punctuation"},"}"),e(),n("span",{class:"token keyword"},"from"),e(),n("span",{class:"token string"},"'@muban/template'"),n("span",{class:"token punctuation"},";"),e(`

`),n("span",{class:"token keyword"},"export"),e(),n("span",{class:"token keyword"},"type"),e(),n("span",{class:"token class-name"},"TodoItemTemplateProps"),e(),n("span",{class:"token operator"},"="),e(),n("span",{class:"token punctuation"},"{"),e(`
  title`),n("span",{class:"token operator"},":"),e(),n("span",{class:"token builtin"},"string"),n("span",{class:"token punctuation"},";"),e(`
  isCompleted`),n("span",{class:"token operator"},":"),e(),n("span",{class:"token builtin"},"boolean"),n("span",{class:"token punctuation"},";"),e(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),e(`

`),n("span",{class:"token keyword"},"export"),e(),n("span",{class:"token keyword"},"function"),e(),n("span",{class:"token function"},"todoItemTemplate"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),e(`
  title`),n("span",{class:"token punctuation"},","),e(`
  isCompleted`),n("span",{class:"token punctuation"},","),e(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token operator"},":"),e(" TodoItemTemplateProps"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},":"),e(" ComponentTemplateResult "),n("span",{class:"token punctuation"},"{"),e(`
  `),n("span",{class:"token comment"},"// there is also an `editing` class, but that's only set when interacting with the element"),e(`
  `),n("span",{class:"token keyword"},"return"),e(" html"),n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token string"},'<li data-component="todo-item" class="'),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),e("isCompleted "),n("span",{class:"token operator"},"?"),e(),n("span",{class:"token string"},"'completed'"),e(),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},"''"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"},`">
    <div class="view">
      <input data-ref="completedInput" class="toggle" type="checkbox" checked=`),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),e("isCompleted"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"},` />
      <label data-ref="title">`),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),e("title"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"},`</label>
      <button data-ref="destroyButton" class="destroy"></button>
    </div>
    <input data-ref="editInput" class="edit" />
  </li>`),n("span",{class:"token template-punctuation string"},"`")]),n("span",{class:"token punctuation"},";"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br"),n("span",{class:"line-number"},"14"),n("br"),n("span",{class:"line-number"},"15"),n("br"),n("span",{class:"line-number"},"16"),n("br"),n("span",{class:"line-number"},"17"),n("br"),n("span",{class:"line-number"},"18"),n("br"),n("span",{class:"line-number"},"19"),n("br"),n("span",{class:"line-number"},"20"),n("br"),n("span",{class:"line-number"},"21"),n("br"),n("span",{class:"line-number"},"22"),n("br")])],-1),C=l('<p>This template has two properties: <code>title</code>, the title of each todo, and <code>isCompleted</code>, an indicator for when an item has been completed. Data wise, this is all we know about the item, and what we are later going to save into <code>LocalStorage</code>.</p><blockquote><p>It does have an <code>editing</code> state, but that is all handled by the Component if users interact with it. The &quot;initial state&quot; can never be &quot;editing&quot;.</p></blockquote><p>With the props we do the following:</p><ol><li>We enter the <code>title</code> in the label.</li><li>We conditionally add the <code>completed</code> class. And we mark the checkbox as <code>checked</code>.</li><li>We&#39;re <strong>not</strong> setting the value of the &quot;edit&quot; <code>input</code> field, this will be done by the Component when switching into &quot;editing mode&quot;.</li></ol><p>Besides the props, we have also added <code>data-ref</code> attributes on all elements that require updates from the Component after interacting with the application later.</p><ol><li>The <code>data-component</code> doesn&#39;t need a <code>data-ref</code>, it can be referenced using <code>refs.self</code>.</li><li>The <code>data-ref=&quot;completedInput&quot;</code> is for the checkbox, we need to listen when its state changes.</li><li>The <code>data-ref=&quot;title&quot;</code> is to read the initial title value, and to update it later when editing.</li><li>The <code>data-ref=&quot;destroyButton&quot;</code> needs a <code>click</code> binding, so we can remove the item.</li><li>The <code>data-ref=&quot;editInput&quot;</code> needs a <code>value</code>, so we can set and update its value.</li></ol><blockquote><p>Anything that doesn&#39;t have a <code>data-ref</code> attribute will stay as rendered.</p></blockquote><p>The two properties that we passed to the template (<code>{ title, isCompleted }</code>) are not automatically available in JS when we create our Component. We might not even always need them. In this case we do, so we need to think about how the Component is going to get access to them later.</p><p>For the <code>title</code>, we can easily read the <code>textContent</code> of the <code>&lt;label&gt;</code> tag, so as long as that element has a <code>data-ref</code>, we&#39;re good. For the <code>isCompleted</code> we have two options to extract it, we can either use the <code>class=&quot;completed&quot;</code> on the root element, or use the <code>checked</code> attribute on the input.</p><h2 id="appheader" tabindex="-1"><a class="header-anchor" href="#appheader" aria-hidden="true">#</a> <code>AppHeader</code></h2><p>Create a <code>src/components/app-header/AppHeader.template.ts</code> with the following content;</p>',11),A=n("div",{class:"language-typescript ext-ts line-numbers-mode"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"import"),e(),n("span",{class:"token keyword"},"type"),e(),n("span",{class:"token punctuation"},"{"),e(" ComponentTemplateResult "),n("span",{class:"token punctuation"},"}"),e(),n("span",{class:"token keyword"},"from"),e(),n("span",{class:"token string"},"'@muban/template'"),n("span",{class:"token punctuation"},";"),e(`
`),n("span",{class:"token keyword"},"import"),e(),n("span",{class:"token punctuation"},"{"),e(" html "),n("span",{class:"token punctuation"},"}"),e(),n("span",{class:"token keyword"},"from"),e(),n("span",{class:"token string"},"'@muban/template'"),n("span",{class:"token punctuation"},";"),e(`

`),n("span",{class:"token keyword"},"export"),e(),n("span",{class:"token keyword"},"type"),e(),n("span",{class:"token class-name"},"AppHeaderTemplateProps"),e(),n("span",{class:"token operator"},"="),e(),n("span",{class:"token punctuation"},"{"),e(`
  title`),n("span",{class:"token operator"},"?"),n("span",{class:"token operator"},":"),e(),n("span",{class:"token builtin"},"string"),n("span",{class:"token punctuation"},";"),e(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),e(`

`),n("span",{class:"token keyword"},"export"),e(),n("span",{class:"token keyword"},"function"),e(),n("span",{class:"token function"},"appHeaderTemplate"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),e(`
  title `),n("span",{class:"token operator"},"="),e(),n("span",{class:"token string"},"'Todos'"),n("span",{class:"token punctuation"},","),e(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token operator"},":"),e(" AppHeaderTemplateProps "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},":"),e(" ComponentTemplateResult "),n("span",{class:"token punctuation"},"{"),e(`
  `),n("span",{class:"token keyword"},"return"),e(" html"),n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token string"},`<div data-component="app-header" class="header">
    <h1>`),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),e("title"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"},`</h1>
    <input
      data-ref="newTodoInput"
      class="new-todo"
      placeholder="What needs to be done?"
      autofocus
    />
  </div>`),n("span",{class:"token template-punctuation string"},"`")]),n("span",{class:"token punctuation"},";"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"},"\xA0"),n("div",{class:"highlight-line"},"\xA0"),n("br"),n("div",{class:"highlight-line"},"\xA0"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br"),n("span",{class:"line-number"},"14"),n("br"),n("span",{class:"line-number"},"15"),n("br"),n("span",{class:"line-number"},"16"),n("br"),n("span",{class:"line-number"},"17"),n("br"),n("span",{class:"line-number"},"18"),n("br"),n("span",{class:"line-number"},"19"),n("br"),n("span",{class:"line-number"},"20"),n("br")])],-1),q=l('<p>This template is similar to what we had before in the <code>App</code> template (the <code>title</code>). It also has an input for adding new todos.</p><p>What we have done here is;</p><ol><li>Add the <code>data-component=&quot;app-header&quot;</code> attribute to the root element.</li><li>Render the <code>title</code>.</li><li>Add <code>data-ref=&quot;newTodoInput&quot;</code> to interact with the input element to add new todos.</li></ol><p>There is no initial data in this template that our Component needs access to later, so there is nothing else to do.</p><h2 id="appfooter" tabindex="-1"><a class="header-anchor" href="#appfooter" aria-hidden="true">#</a> <code>AppFooter</code></h2><p>Create a <code>src/components/app-footer/AppFooter.template.ts</code> with the following content;</p>',6),x=n("div",{class:"language-typescript ext-ts line-numbers-mode"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"import"),e(),n("span",{class:"token keyword"},"type"),e(),n("span",{class:"token punctuation"},"{"),e(" ComponentTemplateResult "),n("span",{class:"token punctuation"},"}"),e(),n("span",{class:"token keyword"},"from"),e(),n("span",{class:"token string"},"'@muban/template'"),n("span",{class:"token punctuation"},";"),e(`
`),n("span",{class:"token keyword"},"import"),e(),n("span",{class:"token punctuation"},"{"),e(" html "),n("span",{class:"token punctuation"},"}"),e(),n("span",{class:"token keyword"},"from"),e(),n("span",{class:"token string"},"'@muban/template'"),n("span",{class:"token punctuation"},";"),e(`

`),n("span",{class:"token keyword"},"type"),e(),n("span",{class:"token class-name"},"AppFooterTemplateProps"),e(),n("span",{class:"token operator"},"="),e(),n("span",{class:"token punctuation"},"{"),e(`
  uncompletedCount`),n("span",{class:"token operator"},"?"),n("span",{class:"token operator"},":"),e(),n("span",{class:"token builtin"},"number"),n("span",{class:"token punctuation"},";"),e(`
  selectedFilter`),n("span",{class:"token operator"},"?"),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},"'active'"),e(),n("span",{class:"token operator"},"|"),e(),n("span",{class:"token string"},"'completed'"),n("span",{class:"token punctuation"},";"),e(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),e(`

`),n("span",{class:"token keyword"},"export"),e(),n("span",{class:"token keyword"},"function"),e(),n("span",{class:"token function"},"appFooterTemplate"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),e(`
  uncompletedCount `),n("span",{class:"token operator"},"="),e(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),e(`
  selectedFilter`),n("span",{class:"token punctuation"},","),e(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token operator"},":"),e(" AppFooterTemplateProps "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},":"),e(" ComponentTemplateResult "),n("span",{class:"token punctuation"},"{"),e(`
  `),n("span",{class:"token keyword"},"return"),e(" html"),n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token string"},`
    <footer data-component="app-footer" class="footer">
      <span data-ref="remainingCount" class="todo-count">
        <strong>`),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),e("uncompletedCount"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"},"</strong> "),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),e("uncompletedCount "),n("span",{class:"token operator"},"==="),e(),n("span",{class:"token number"},"1"),e(),n("span",{class:"token operator"},"?"),e(),n("span",{class:"token string"},"'item'"),e(),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},"'items'"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"},` left
      </span>
      <ul class="filters">
        <li>
          <a data-ref="filterAll" class="`),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),n("span",{class:"token operator"},"!"),e("selectedFilter "),n("span",{class:"token operator"},"?"),e(),n("span",{class:"token string"},"'selected'"),e(),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},"''"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"},`" href="#/">All</a>
        </li>
        <li>
          <a
            data-ref="filterActive"
            class="`),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),e("selectedFilter "),n("span",{class:"token operator"},"==="),e(),n("span",{class:"token string"},"'active'"),e(),n("span",{class:"token operator"},"?"),e(),n("span",{class:"token string"},"'selected'"),e(),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},"''"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"},`"
            href="#/active"
          >
            Active
          </a>
        </li>
        <li>
          <a
            data-ref="filterCompleted"
            class="`),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),e("selectedFilter "),n("span",{class:"token operator"},"==="),e(),n("span",{class:"token string"},"'completed'"),e(),n("span",{class:"token operator"},"?"),e(),n("span",{class:"token string"},"'selected'"),e(),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},"''"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"},`"
            href="#/completed"
          >
            Completed
          </a>
        </li>
      </ul>
      <!-- Hidden if no completed items are left \u2193 -->
      <button data-ref="clearCompletedButton" class="clear-completed">Clear completed</button>
    </footer>
  `),n("span",{class:"token template-punctuation string"},"`")]),n("span",{class:"token punctuation"},";"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br"),n("span",{class:"line-number"},"14"),n("br"),n("span",{class:"line-number"},"15"),n("br"),n("span",{class:"line-number"},"16"),n("br"),n("span",{class:"line-number"},"17"),n("br"),n("span",{class:"line-number"},"18"),n("br"),n("span",{class:"line-number"},"19"),n("br"),n("span",{class:"line-number"},"20"),n("br"),n("span",{class:"line-number"},"21"),n("br"),n("span",{class:"line-number"},"22"),n("br"),n("span",{class:"line-number"},"23"),n("br"),n("span",{class:"line-number"},"24"),n("br"),n("span",{class:"line-number"},"25"),n("br"),n("span",{class:"line-number"},"26"),n("br"),n("span",{class:"line-number"},"27"),n("br"),n("span",{class:"line-number"},"28"),n("br"),n("span",{class:"line-number"},"29"),n("br"),n("span",{class:"line-number"},"30"),n("br"),n("span",{class:"line-number"},"31"),n("br"),n("span",{class:"line-number"},"32"),n("br"),n("span",{class:"line-number"},"33"),n("br"),n("span",{class:"line-number"},"34"),n("br"),n("span",{class:"line-number"},"35"),n("br"),n("span",{class:"line-number"},"36"),n("br"),n("span",{class:"line-number"},"37"),n("br"),n("span",{class:"line-number"},"38"),n("br"),n("span",{class:"line-number"},"39"),n("br"),n("span",{class:"line-number"},"40"),n("br"),n("span",{class:"line-number"},"41"),n("br"),n("span",{class:"line-number"},"42"),n("br"),n("span",{class:"line-number"},"43"),n("br"),n("span",{class:"line-number"},"44"),n("br"),n("span",{class:"line-number"},"45"),n("br")])],-1),I=l('<p>This template has 3 purposes:</p><ol><li>It shows how many todo items are uncompleted.</li><li>Some filters we can activate (we need to set up routing for this).</li><li>A button to remove everything that we have completed.</li></ol><p>We receive two props:</p><ol><li>An <code>uncompletedCount</code> that we render here, including the correct pluralisation of <code>items</code>. Note that this condition is just for the template rendering, the initial state from the server. Whenever this changes after interacting on the client, it will be updated from the Component using <code>bindings</code>.</li><li>An optional <code>selectedFilter</code>, which is used to set the <code>selected</code> class on the right filter element.</li></ol><p>To update the count (and the correct label) later, we have added the <code>data-ref=&quot;todoCount&quot;</code> to this span. For this example we&#39;re going to update the complete value later, including the <code>&lt;strong&gt;</code> tag \u2013 which means we will need to render <code>html</code>. We could also have chosen to introduce another <code>&lt;span&gt;</code> tag around the label, and update the count and the label separately with normal <code>text</code> bindings.</p><p>Our filters also have <code>data-ref</code> attributes added, so we can add or remove the <code>selected</code> class based on interactions we do later.</p><p>And lastly we added <code>data-ref=&quot;clearCompletedButton&quot;</code> to interact with the clear button.</p><h2 id="app" tabindex="-1"><a class="header-anchor" href="#app" aria-hidden="true">#</a> <code>App</code></h2><p>Update our <code>src/components/app/App.template.ts</code> to the following;</p>',9),F=n("div",{class:"language-typescript ext-ts line-numbers-mode"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"import"),e(),n("span",{class:"token keyword"},"type"),e(),n("span",{class:"token punctuation"},"{"),e(" ComponentTemplateResult "),n("span",{class:"token punctuation"},"}"),e(),n("span",{class:"token keyword"},"from"),e(),n("span",{class:"token string"},"'@muban/template'"),n("span",{class:"token punctuation"},";"),e(`
`),n("span",{class:"token keyword"},"import"),e(),n("span",{class:"token punctuation"},"{"),e(" html "),n("span",{class:"token punctuation"},"}"),e(),n("span",{class:"token keyword"},"from"),e(),n("span",{class:"token string"},"'@muban/template'"),n("span",{class:"token punctuation"},";"),e(`
`),n("span",{class:"token keyword"},"import"),e(),n("span",{class:"token punctuation"},"{"),e(" appFooterTemplate "),n("span",{class:"token punctuation"},"}"),e(),n("span",{class:"token keyword"},"from"),e(),n("span",{class:"token string"},"'../app-footer/AppFooter.template'"),n("span",{class:"token punctuation"},";"),e(`
`),n("span",{class:"token keyword"},"import"),e(),n("span",{class:"token punctuation"},"{"),e(" appHeaderTemplate "),n("span",{class:"token punctuation"},"}"),e(),n("span",{class:"token keyword"},"from"),e(),n("span",{class:"token string"},"'../app-header/AppHeader.template'"),n("span",{class:"token punctuation"},";"),e(`
`),n("span",{class:"token keyword"},"import"),e(),n("span",{class:"token keyword"},"type"),e(),n("span",{class:"token punctuation"},"{"),e(" TodoItemTemplateProps "),n("span",{class:"token punctuation"},"}"),e(),n("span",{class:"token keyword"},"from"),e(),n("span",{class:"token string"},"'../todo-item/TodoItem.template'"),n("span",{class:"token punctuation"},";"),e(`
`),n("span",{class:"token keyword"},"import"),e(),n("span",{class:"token punctuation"},"{"),e(" todoItemTemplate "),n("span",{class:"token punctuation"},"}"),e(),n("span",{class:"token keyword"},"from"),e(),n("span",{class:"token string"},"'../todo-item/TodoItem.template'"),n("span",{class:"token punctuation"},";"),e(`

`),n("span",{class:"token keyword"},"export"),e(),n("span",{class:"token keyword"},"type"),e(),n("span",{class:"token class-name"},"AppTemplateProps"),e(),n("span",{class:"token operator"},"="),e(),n("span",{class:"token punctuation"},"{"),e(`
  title`),n("span",{class:"token operator"},"?"),n("span",{class:"token operator"},":"),e(),n("span",{class:"token builtin"},"string"),n("span",{class:"token punctuation"},";"),e(`
  todos`),n("span",{class:"token operator"},"?"),n("span",{class:"token operator"},":"),e(),n("span",{class:"token builtin"},"Array"),n("span",{class:"token operator"},"<"),e("TodoItemTemplateProps"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},";"),e(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),e(`

`),n("span",{class:"token keyword"},"export"),e(),n("span",{class:"token keyword"},"function"),e(),n("span",{class:"token function"},"appTemplate"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),e(" title"),n("span",{class:"token punctuation"},","),e(" todos "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),e(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token operator"},":"),e(" AppTemplateProps "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},":"),e(" ComponentTemplateResult "),n("span",{class:"token punctuation"},"{"),e(`
  `),n("span",{class:"token keyword"},"return"),e(" html"),n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token string"},`
    <div data-component="app">
      <section class="todoapp">
        `),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),n("span",{class:"token function"},"appHeaderTemplate"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),e(" title "),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"},`
        <section class="main">
          <input data-ref="toggleAllInput" id="toggle-all" class="toggle-all" type="checkbox" />
          <label for="toggle-all">Mark all as complete</label>
          <ul data-ref="todoList" class="todo-list">
            `),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),e("todos"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"map"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),e("todo"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token operator"},"=>"),e(),n("span",{class:"token function"},"todoItemTemplate"),n("span",{class:"token punctuation"},"("),e("todo"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"},`
          </ul>
        </section>
        `),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),n("span",{class:"token function"},"appFooterTemplate"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),e(" uncompletedCount"),n("span",{class:"token operator"},":"),e(" todos"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"filter"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),e("todo"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token operator"},"=>"),e(),n("span",{class:"token operator"},"!"),e("todo"),n("span",{class:"token punctuation"},"."),e("isCompleted"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),e("length "),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"},`
      </section>
      <footer class="info">
        <p>Double-click to edit a todo</p>
        <p>Created by <a href="http://github.com/mubanjs">Muban</a></p>
      </footer>
    </div>
  `),n("span",{class:"token template-punctuation string"},"`")]),n("span",{class:"token punctuation"},";"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"},"\xA0"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"},"\xA0"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"},"\xA0"),n("div",{class:"highlight-line"},"\xA0"),n("div",{class:"highlight-line"},"\xA0"),n("br"),n("div",{class:"highlight-line"},"\xA0"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br"),n("span",{class:"line-number"},"14"),n("br"),n("span",{class:"line-number"},"15"),n("br"),n("span",{class:"line-number"},"16"),n("br"),n("span",{class:"line-number"},"17"),n("br"),n("span",{class:"line-number"},"18"),n("br"),n("span",{class:"line-number"},"19"),n("br"),n("span",{class:"line-number"},"20"),n("br"),n("span",{class:"line-number"},"21"),n("br"),n("span",{class:"line-number"},"22"),n("br"),n("span",{class:"line-number"},"23"),n("br"),n("span",{class:"line-number"},"24"),n("br"),n("span",{class:"line-number"},"25"),n("br"),n("span",{class:"line-number"},"26"),n("br"),n("span",{class:"line-number"},"27"),n("br"),n("span",{class:"line-number"},"28"),n("br"),n("span",{class:"line-number"},"29"),n("br"),n("span",{class:"line-number"},"30"),n("br"),n("span",{class:"line-number"},"31"),n("br"),n("span",{class:"line-number"},"32"),n("br"),n("span",{class:"line-number"},"33"),n("br")])],-1),H=l('<p>This is where everything comes together. Keep in mind that we&#39;re still just rendering templates, the &quot;initial state&quot; of our application, that is normally rendered on the server.</p><p>From the <code>main.ts</code> (that renders our component when mounting) we expect to receive the title, and a list of todo items (that are known on the server). We re-use the <code>TodoItemTemplateProps</code> type here to specify which fields each todo item should have. We could also have created a <code>TodoItem</code> type, and use that in the <code>TemplateProps</code> types of both components.</p><p>As you can see, we rendered some child templates:</p><ol><li><code>appHeaderTemplate</code> renders the header, passing along the <code>title</code> prop.</li><li>We map over our <code>todos</code> list, and for each item, we render the <code>todoItemTemplate</code> template, passing along the data.</li><li><code>appFooterTemplate</code> renders the footer, passing the <code>uncompletedCount</code> using an inline filter.</li></ol><p>And we have a <code>data-ref=&quot;toggleAllInput&quot;</code> here as well, to toggle the state of all todos in the list.</p><h2 id="main-ts-data" tabindex="-1"><a class="header-anchor" href="#main-ts-data" aria-hidden="true">#</a> <code>main.ts</code> Data</h2><p>And finally, since we update our App template, we should also pass different data when mounting our app. Please update <code>main.ts</code> to the following:</p>',7),P=n("div",{class:"language-typescript ext-ts line-numbers-mode"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"import"),e(),n("span",{class:"token string"},"'./style.css'"),n("span",{class:"token punctuation"},";"),e(`

`),n("span",{class:"token keyword"},"import"),e(),n("span",{class:"token punctuation"},"{"),e(" createApp "),n("span",{class:"token punctuation"},"}"),e(),n("span",{class:"token keyword"},"from"),e(),n("span",{class:"token string"},"'@muban/muban'"),n("span",{class:"token punctuation"},";"),e(`
`),n("span",{class:"token keyword"},"import"),e(),n("span",{class:"token punctuation"},"{"),e(" App "),n("span",{class:"token punctuation"},"}"),e(),n("span",{class:"token keyword"},"from"),e(),n("span",{class:"token string"},"'./components/app/App'"),n("span",{class:"token punctuation"},";"),e(`
`),n("span",{class:"token keyword"},"import"),e(),n("span",{class:"token punctuation"},"{"),e(" appTemplate "),n("span",{class:"token punctuation"},"}"),e(),n("span",{class:"token keyword"},"from"),e(),n("span",{class:"token string"},"'./components/app/App.template'"),n("span",{class:"token punctuation"},";"),e(`

`),n("span",{class:"token keyword"},"const"),e(" appRoot "),n("span",{class:"token operator"},"="),e(" document"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getElementById"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'app'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"!"),n("span",{class:"token punctuation"},";"),e(`
`),n("span",{class:"token keyword"},"const"),e(" app "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token function"},"createApp"),n("span",{class:"token punctuation"},"("),e("App"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`

app`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"mount"),n("span",{class:"token punctuation"},"("),e("appRoot"),n("span",{class:"token punctuation"},","),e(" appTemplate"),n("span",{class:"token punctuation"},","),e(),n("span",{class:"token punctuation"},"{"),e(`
  title`),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},"'Todos'"),n("span",{class:"token punctuation"},","),e(`
  todos`),n("span",{class:"token operator"},":"),e(),n("span",{class:"token punctuation"},"["),e(`
    `),n("span",{class:"token punctuation"},"{"),e(`
      title`),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},"'Taste JavaScript'"),n("span",{class:"token punctuation"},","),e(`
      isCompleted`),n("span",{class:"token operator"},":"),e(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),e(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),e(`
    `),n("span",{class:"token punctuation"},"{"),e(`
      title`),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},"'Buy a unicorn'"),n("span",{class:"token punctuation"},","),e(`
      isCompleted`),n("span",{class:"token operator"},":"),e(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},","),e(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),e(`
  `),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),e(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"},"\xA0"),n("div",{class:"highlight-line"},"\xA0"),n("div",{class:"highlight-line"},"\xA0"),n("div",{class:"highlight-line"},"\xA0"),n("div",{class:"highlight-line"},"\xA0"),n("div",{class:"highlight-line"},"\xA0"),n("div",{class:"highlight-line"},"\xA0"),n("div",{class:"highlight-line"},"\xA0"),n("div",{class:"highlight-line"},"\xA0"),n("div",{class:"highlight-line"},"\xA0"),n("br")]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br"),n("span",{class:"line-number"},"14"),n("br"),n("span",{class:"line-number"},"15"),n("br"),n("span",{class:"line-number"},"16"),n("br"),n("span",{class:"line-number"},"17"),n("br"),n("span",{class:"line-number"},"18"),n("br"),n("span",{class:"line-number"},"19"),n("br"),n("span",{class:"line-number"},"20"),n("br"),n("span",{class:"line-number"},"21"),n("br"),n("span",{class:"line-number"},"22"),n("br")])],-1),W=n("p",null,[e("In here we're passing the "),n("code",null,"todos"),e(" array with the "),n("code",null,"title"),e(" and "),n("code",null,"isCompleted"),e(" for each item. Everything in that object is typed, so your editor knows exactly what to specify here, and you will get an error if you make a typo, or forget a required property.")],-1),$=n("p",null,"If you visit http://localhost:3000/, you should now see a nice static Todo app!",-1);function R(B,j){const c=p("ExternalLinkIcon"),a=p("CodeGroupItem"),o=p("CodeGroup");return i(),r(u,null,[m,b,n("p",null,[h,n("a",g,[f,s(c)]),w,y,v]),T,s(o,null,{default:t(()=>[s(a,{title:"src/components/todo-item/TodoItem.template.ts"},{default:t(()=>[_]),_:1})]),_:1}),C,s(o,null,{default:t(()=>[s(a,{title:"src/components/app-header/AppHeader.template.ts"},{default:t(()=>[A]),_:1})]),_:1}),q,s(o,null,{default:t(()=>[s(a,{title:"src/components/app-footer/AppFooter.template.ts"},{default:t(()=>[x]),_:1})]),_:1}),I,s(o,null,{default:t(()=>[s(a,{title:"src/components/app/App.template.ts"},{default:t(()=>[F]),_:1})]),_:1}),H,s(o,null,{default:t(()=>[s(a,{title:"src/main.ts"},{default:t(()=>[P]),_:1})]),_:1}),W,$],64)}var L=d(k,[["render",R]]);export{L as default};
